openapi: 3.0.0
info:
  title: Movie Explorer API V1
  version: v1
paths:
  "/api/v1/users":
    post:
      summary: Creates a user
      tags:
      - Users
      parameters: []
      responses:
        '422':
          description: invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
        '201':
          description: user created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    first_name:
                      type: string
                    last_name:
                      type: string
                    email:
                      type: string
                    password:
                      type: string
                    mobile_number:
                      type: string
                  required:
                  - first_name
                  - last_name
                  - email
                  - password
                  - mobile_number
              required:
              - user
    get:
      summary: Retrieves users
      tags:
      - Users
      security:
      - Bearer: []
      responses:
        '200':
          description: users retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/user'
        '403':
          description: forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  "/api/v1/users/sign_in":
    post:
      summary: Signs in a user
      tags:
      - Users
      parameters: []
      responses:
        '200':
          description: user signed in
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  email:
                    type: string
                  first_name:
                    type: string
                  last_name:
                    type: string
                  mobile_number:
                    type: string
                  role:
                    type: string
                  token:
                    type: string
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                    password:
                      type: string
                  required:
                  - email
                  - password
              required:
              - user
  "/api/v1/movies":
    get:
      summary: Retrieves movies
      tags:
      - Movies
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
      - name: title
        in: query
        required: false
        schema:
          type: string
      - name: genre
        in: query
        required: false
        schema:
          type: string
      - name: release_year
        in: query
        required: false
        schema:
          type: integer
      - name: min_rating
        in: query
        required: false
        schema:
          type: number
      - name: premium
        in: query
        required: false
        schema:
          type: boolean
      responses:
        '200':
          description: movies retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  movies:
                    type: array
                    items:
                      $ref: '#/components/schemas/Movie'
                  total_pages:
                    type: integer
                  current_page:
                    type: integer
    post:
      summary: Creates a movie
      tags:
      - Movies
      security:
      - Bearer: []
      parameters: []
      responses:
        '201':
          description: movie created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Movie added successfully"
                  movie:
                    $ref: '#/components/schemas/Movie'
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized"
        '422':
          description: invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                movie[title]:
                  type: string
                  description: Title of the movie
                movie[genre]:
                  type: string
                  description: Genre of the movie
                movie[release_year]:
                  type: integer
                  description: Release year of the movie
                movie[rating]:
                  type: number
                  format: float
                  description: Rating of the movie (0 to 10)
                movie[director]:
                  type: string
                  description: Director of the movie
                movie[duration]:
                  type: integer
                  description: Duration of the movie in minutes
                movie[description]:
                  type: string
                  description: Description of the movie (max 1000 characters)
                movie[main_lead]:
                  type: string
                  description: Main lead actor/actress of the movie
                movie[streaming_platform]:
                  type: string
                  description: Streaming platform (Amazon, Netflix, Hulu, Disney+, HBO)
                  enum: ["Amazon", "Netflix", "Hulu", "Disney+", "HBO"]
                movie[premium]:
                  type: boolean
                  description: Whether the movie is premium
                movie[poster]:
                  type: string
                  format: binary
                  description: Poster image file (JPEG or PNG)
                movie[banner]:
                  type: string
                  format: binary
                  description: Banner image file (JPEG or PNG)
              required:
              - movie[title]
              - movie[genre]
              - movie[release_year]
              - movie[director]
              - movie[duration]
              - movie[description]
              - movie[main_lead]
              - movie[streaming_platform]
  "/api/v1/movies/{genre}":
    get:
      summary: Retrieves movies by genre
      tags:
      - Movies
      parameters:
      - name: genre
        in: path
        required: true
        schema:
          type: string
      - name: page
        in: query
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: movies retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  movies:
                    type: array
                    items:
                      $ref: '#/components/schemas/Movie'
                  total_pages:
                    type: integer
                  current_page:
                    type: integer
        '400':
          description: invalid genre
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  "/api/v1/movies/{id}":
    get:
      summary: Retrieves a movie
      tags:
      - Movies
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: movie retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
        '404':
          description: movie not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    patch:
      summary: Updates a movie
      tags:
      - Movies
      security:
      - Bearer: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: movie updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized"
        '404':
          description: movie not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Movie not found"
        '422':
          description: invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                movie[title]:
                  type: string
                  description: Title of the movie
                movie[genre]:
                  type: string
                  description: Genre of the movie
                movie[release_year]:
                  type: integer
                  description: Release year of the movie
                movie[rating]:
                  type: number
                  format: float
                  description: Rating of the movie (0 to 10)
                movie[director]:
                  type: string
                  description: Director of the movie
                movie[duration]:
                  type: integer
                  description: Duration of the movie in minutes
                movie[description]:
                  type: string
                  description: Description of the movie (max 1000 characters)
                movie[main_lead]:
                  type: string
                  description: Main lead actor/actress of the movie
                movie[streaming_platform]:
                  type: string
                  description: Streaming platform (Amazon, Netflix, Hulu, Disney+, HBO)
                  enum: ["Amazon", "Netflix", "Hulu", "Disney+", "HBO"]
                movie[premium]:
                  type: boolean
                  description: Whether the movie is premium
                movie[poster]:
                  type: string
                  format: binary
                  description: Poster image file (JPEG or PNG)
                movie[banner]:
                  type: string
                  format: binary
                  description: Banner image file (JPEG or PNG)
    delete:
      summary: Deletes a movie
      tags:
      - Movies
      security:
      - Bearer: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: movie deleted
        '401':
          description: unauthorized
  "/api/v1/subscriptions":
    post:
      summary: Creates a subscription
      tags:
      - Subscriptions
      security:
      - Bearer: []
      parameters: []
      responses:
        '201':
          description: subscription created
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                subscription:
                  type: object
                  properties:
                    start_date:
                      type: string
                      format: date-time
                    end_date:
                      type: string
                      format: date-time
                    premium:
                      type: boolean
                    active:
                      type: boolean
                  required:
                  - start_date
                  - premium
                  - active
  "/api/v1/subscriptions/{id}":
    patch:
      summary: Updates a subscription
      tags:
      - Subscriptions
      security:
      - Bearer: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: subscription updated
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                subscription:
                  type: object
                  properties:
                    start_date:
                      type: string
                      format: date-time
                    end_date:
                      type: string
                      format: date-time
                    premium:
                      type: boolean
                    active:
                      type: boolean
    delete:
      summary: Deletes a subscription
      tags:
      - Subscriptions
      security:
      - Bearer: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: subscription deleted
        '401':
          description: unauthorized
  "/api/v1/users/{id}":
    get:
      summary: Retrieves a user
      tags:
      - Users
      security:
      - Bearer: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: user retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/user'
        '403':
          description: forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    patch:
      summary: Updates a user
      tags:
      - Users
      security:
      - Bearer: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: user updated
        '403':
          description: forbidden
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    first_name:
                      type: string
                    last_name:
                      type: string
                    email:
                      type: string
                    password:
                      type: string
                    mobile_number:
                      type: string
    delete:
      summary: Deletes a user
      tags:
      - Users
      security:
      - Bearer: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: user deleted
        '403':
          description: forbidden
  "/api/v1/users/password":
    post:
      summary: Creates a password reset
      tags:
      - Users
      parameters: []
      responses:
        '200':
          description: password reset instructions sent
        '404':
          description: email not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
              required:
              - email
    put:
      summary: Updates password with reset token
      tags:
      - Users
      parameters: []
      responses:
        '200':
          description: password updated
        '422':
          description: invalid or expired token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                password:
                  type: string
              required:
              - token
              - password
servers:
- url: http://localhost:3000
  description: Local server
- url: https://movie-explorer-ror-agrim.onrender.com
  description: Production server
components:
  schemas:
    user:
      type: object
      properties:
        id:
          type: integer
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
        mobile_number:
          type: string
        role:
          type: string
      required:
      - first_name
      - last_name
      - email
      - password
      - mobile_number
    Movie:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        genre:
          type: string
        release_year:
          type: integer
        rating:
          type: number
          format: float
        director:
          type: string
        duration:
          type: integer
        description:
          type: string
        main_lead:
          type: string
        streaming_platform:
          type: string
        premium:
          type: boolean
        poster_url:
          type: string
        banner_url:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
      - id
      - title
      - genre
      - release_year
      - director
      - duration
      - description
      - main_lead
      - streaming_platform
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
- Bearer: []