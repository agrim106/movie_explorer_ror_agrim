---
openapi: 3.0.1
info:
  title: Movie Explorer API V1
  version: v1
paths:
  "/api/v1/users":
    post:
      summary: User created
      tags:
      - Users
      parameters: []
      responses:
        '422':
          description: returns a 422 response
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    first_name:
                      type: string
                    last_name:
                      type: string
                    email:
                      type: string
                      format: email
                    password:
                      type: string
                    mobile_number:
                      type: string
                  required:
                  - first_name
                  - last_name
                  - email
                  - password
                  - mobile_number
  "/api/v1/users/sign_in":
    post:
      summary: Sign in a user
      tags:
      - Users
      parameters: []
      responses:
        '200':
          description: User signed in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  email:
                    type: string
                  first_name:
                    type: string
                  last_name:
                    type: string
                  mobile_number:
                    type: string
                  role:
                    type: string
                    enum:
                    - user
                    - supervisor
                    - admin
                  token:
                    type: string
                required:
                - id
                - email
                - first_name
                - last_name
                - mobile_number
                - role
                - token
        '401':
          description: Invalid email or password
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                    password:
                      type: string
                  required:
                  - email
                  - password
              required:
              - user
  "/api/v1/movies":
    get:
      summary: List movies
      tags:
      - Movies
      parameters:
      - name: page
        in: query
        required: false
        description: Page number
        schema:
          type: integer
      responses:
        '200':
          description: Movies retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  movies:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        title:
                          type: string
                        genre:
                          type: string
                        release_year:
                          type: integer
                        rating:
                          type: number
                          format: float
                        director:
                          type: string
                        duration:
                          type: integer
                        main_lead:
                          type: string
                        streaming_platform:
                          type: string
                          enum:
                          - Netflix
                          - Amazon Prime
                          - Disney+
                        description:
                          type: string
                        plan:
                          type: string
                          enum:
                          - basic
                          - premium
                        poster_url:
                          type: string
                          nullable: true
                        banner_url:
                          type: string
                          nullable: true
                      required:
                      - id
                      - title
                      - genre
                      - release_year
                      - rating
                      - director
                      - duration
                      - main_lead
                      - streaming_platform
                      - description
                      - plan
                  total_pages:
                    type: integer
                  current_page:
                    type: integer
                required:
                - movies
                - total_pages
                - current_page
    post:
      summary: Create a movie
      tags:
      - Movies
      security:
      - Bearer: []
      description: Creates a movie with poster and banner image uploads. Triggers
        FCM notification to premium users if the movie is premium.
      parameters: []
      responses:
        '201':
          description: Movie created successfully
        '422':
          description: Unprocessable Entity
        '403':
          description: Forbidden
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                movie[title]:
                  type: string
                  description: Movie title, max 255 chars
                movie[genre]:
                  type: string
                  enum:
                  - action
                  - horror
                  - comedy
                  - romance
                  - sci-fi
                  description: 'Must be one of: action, horror, comedy, romance, sci-fi'
                movie[release_year]:
                  type: integer
                  description: 1900 to current year
                movie[rating]:
                  type: number
                  format: float
                  description: 0.0 to 10.0
                movie[director]:
                  type: string
                  description: Director name, max 255 chars
                movie[duration]:
                  type: integer
                  description: Duration in minutes, >= 30
                movie[main_lead]:
                  type: string
                  description: Main actor, max 255 chars
                movie[streaming_platform]:
                  type: string
                  enum:
                  - Netflix
                  - Amazon Prime
                  - Disney+
                  description: 'Must be one of: Netflix, Amazon Prime, Disney+'
                movie[description]:
                  type: string
                  description: Max 1000 chars
                movie[premium]:
                  type: boolean
                  description: True for premium, false for basic
                movie[poster]:
                  type: string
                  format: binary
                  description: Poster image file (JPEG/PNG)
                movie[banner]:
                  type: string
                  format: binary
                  description: Banner image file (JPEG/PNG)
              required:
              - movie[title]
              - movie[genre]
              - movie[release_year]
              - movie[rating]
              - movie[director]
              - movie[duration]
              - movie[main_lead]
              - movie[streaming_platform]
              - movie[description]
              - movie[premium]
              - movie[poster]
              - movie[banner]
              additionalProperties: false
        required: true
  "/api/v1/movies/{id}":
    get:
      summary: Retrieve a movie
      tags:
      - Movies
      parameters:
      - name: id
        in: path
        required: true
        example: 7
        schema:
          type: integer
      responses:
        '200':
          description: Movie retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  genre:
                    type: string
                  release_year:
                    type: integer
                  rating:
                    type: number
                    format: float
                  director:
                    type: string
                  duration:
                    type: integer
                  main_lead:
                    type: string
                  streaming_platform:
                    type: string
                    enum:
                    - Netflix
                    - Amazon Prime
                    - Disney+
                  description:
                    type: string
                  plan:
                    type: string
                    enum:
                    - basic
                    - premium
                  poster_url:
                    type: string
                    nullable: true
                  banner_url:
                    type: string
                    nullable: true
                required:
                - id
                - title
                - genre
                - release_year
                - rating
                - director
                - duration
                - main_lead
                - streaming_platform
                - description
                - plan
        '404':
          description: Movie not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    patch:
      summary: Update a movie
      tags:
      - Movies
      security:
      - Bearer: []
      description: Updates a movie. All fields are optional. Only provided fields
        are updated. Poster and banner images are preserved if not provided.
      parameters:
      - name: id
        in: path
        required: true
        example: 7
        schema:
          type: integer
      responses:
        '200':
          description: Movie updated successfully
        '422':
          description: Invalid release year
        '403':
          description: Forbidden
        '404':
          description: Movie not found
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                movie[title]:
                  type: string
                  description: Movie title, max 255 chars
                movie[genre]:
                  type: string
                  enum:
                  - action
                  - horror
                  - comedy
                  - romance
                  - sci-fi
                  description: 'Must be one of: action, horror, comedy, romance, sci-fi'
                movie[release_year]:
                  type: integer
                  description: 1900 to current year
                movie[rating]:
                  type: number
                  format: float
                  description: 0.0 to 10.0
                movie[director]:
                  type: string
                  description: Director name, max 255 chars
                movie[duration]:
                  type: integer
                  description: Duration in minutes, >= 30
                movie[main_lead]:
                  type: string
                  description: Main actor, max 255 chars
                movie[streaming_platform]:
                  type: string
                  enum:
                  - Netflix
                  - Amazon Prime
                  - Disney+
                  description: 'Must be one of: Netflix, Amazon Prime, Disney+'
                movie[description]:
                  type: string
                  description: Max 1000 chars
                movie[premium]:
                  type: boolean
                  description: True for premium, false for basic
                movie[poster]:
                  type: string
                  format: binary
                  description: Poster image file (JPEG/PNG), preserved if not provided
                movie[banner]:
                  type: string
                  format: binary
                  description: Banner image file (JPEG/PNG), preserved if not provided
              additionalProperties: false
  "/api/v1/movies/{genre}":
    get:
      summary: List movies by genre
      tags:
      - Movies
      parameters:
      - name: genre
        in: path
        required: true
        enum:
        - action
        - horror
        - comedy
        - romance
        - sci-fi
        description: "Genre must be one of: action, horror, comedy, romance, sci-fi:\n
          * `action` \n * `horror` \n * `comedy` \n * `romance` \n * `sci-fi` \n "
        schema:
          type: string
      - name: page
        in: query
        required: false
        description: Page number
        schema:
          type: integer
      responses:
        '200':
          description: Movies retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  movies:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        title:
                          type: string
                        genre:
                          type: string
                        release_year:
                          type: integer
                        rating:
                          type: number
                          format: float
                        director:
                          type: string
                        duration:
                          type: integer
                        main_lead:
                          type: string
                        streaming_platform:
                          type: string
                          enum:
                          - Netflix
                          - Amazon Prime
                          - Disney+
                        description:
                          type: string
                        plan:
                          type: string
                          enum:
                          - basic
                          - premium
                        poster_url:
                          type: string
                          nullable: true
                        banner_url:
                          type: string
                          nullable: true
                      required:
                      - id
                      - title
                      - genre
                      - release_year
                      - rating
                      - director
                      - duration
                      - main_lead
                      - streaming_platform
                      - description
                      - plan
                  total_pages:
                    type: integer
                  current_page:
                    type: integer
                required:
                - movies
                - total_pages
                - current_page
  "/api/v1/subscriptions":
    post:
      summary: Create a subscription
      tags:
      - Subscriptions
      security:
      - Bearer: []
      parameters: []
      responses:
        '200':
          description: Subscription session created successfully
        '400':
          description: Invalid plan type
        '401':
          description: Unauthorized access
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                plan_type:
                  type: string
                  enum:
                  - 1_day
                  - 7_days
                  - 1_month
                  description: The type of subscription plan to purchase
              required:
              - plan_type
  "/api/v1/users/sign_out":
    post:
      summary: Sign out a user
      tags:
      - Users
      security:
      - Bearer: []
      responses:
        '200':
          description: User signed out successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  "/api/v1/users/{id}":
    get:
      summary: Retrieve a user
      tags:
      - Users
      security:
      - Bearer: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: User retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  email:
                    type: string
                  first_name:
                    type: string
                  last_name:
                    type: string
                  mobile_number:
                    type: string
                  role:
                    type: string
                    enum:
                    - user
                    - supervisor
                    - admin
                required:
                - id
                - email
                - first_name
                - last_name
                - mobile_number
                - role
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    patch:
      summary: Update a user
      tags:
      - Users
      security:
      - Bearer: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  email:
                    type: string
                  first_name:
                    type: string
                  last_name:
                    type: string
                  mobile_number:
                    type: string
                  role:
                    type: string
                    enum:
                    - user
                    - supervisor
                    - admin
                required:
                - id
                - email
                - first_name
                - last_name
                - mobile_number
                - role
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '422':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    first_name:
                      type: string
                    last_name:
                      type: string
                    email:
                      type: string
                    mobile_number:
                      type: string
                    password:
                      type: string
              required:
              - user
  "/api/v1/users/update_device_token":
    post:
      summary: Update device token
      tags:
      - Users
      security:
      - Bearer: []
      parameters: []
      responses:
        '200':
          description: Device token updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '422':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                device_token:
                  type: string
              required:
              - device_token
  "/api/v1/users/update_notification_preference":
    patch:
      summary: Update notification preference
      tags:
      - Users
      security:
      - Bearer: []
      parameters: []
      responses:
        '200':
          description: Notification preference updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '422':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                notification_enabled:
                  type: boolean
              required:
              - notification_enabled
servers:
- url: http://localhost:3000
  description: Local server
- url: https://movie-explorer-ror-agrim.onrender.com
  description: Production server
components:
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
      bearerFormat: JWT
